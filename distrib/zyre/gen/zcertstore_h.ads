pragma Ada_2012;
pragma Style_Checks (Off);
pragma Warnings ("U");

with Interfaces.C; use Interfaces.C;
with Interfaces.C.Strings;
limited with czmq_library_h;
with System;
with Interfaces.C.Extensions;

package zcertstore_h is

   --  arg-macro: procedure zcertstore_dump (s)
   --    zcertstore_print(s)
  --  =========================================================================
  --    zcertstore - work with CURVE security certificate stores
  --    Copyright (c) the Contributors as noted in the AUTHORS file.
  --    This file is part of CZMQ, the high-level C binding for 0MQ:
  --    http://czmq.zeromq.org.
  --    This Source Code Form is subject to the terms of the Mozilla Public
  --    License, v. 2.0. If a copy of the MPL was not distributed with this
  --    file, You can obtain one at http://mozilla.org/MPL/2.0/.
  --    =========================================================================
  -- 

  --  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
  --  @warning Please edit the model at "api/zcertstore.api" to make changes.
  --  @interface
  --  This is a stable class, and may not change except for emergencies. It
  --  is provided in stable builds.
  --  This class has draft methods, which may change over time. They are not
  --  in stable releases, by default. Use --enable-drafts to enable.
  --  Create a new certificate store from a disk directory, loading and
  --  indexing all certificates in that location. The directory itself may be
  --  absent, and created later, or modified at any time. The certificate store
  --  is automatically refreshed on any zcertstore_lookup() call. If the
  --  location is specified as NULL, creates a pure-memory store, which you
  --  can work with by inserting certificates at runtime.
   function zcertstore_new (location : Interfaces.C.Strings.chars_ptr) return access czmq_library_h.zcertstore_t  -- /homes/taft/_distrib/include/zcertstore.h:35
   with Import => True, 
        Convention => C, 
        External_Name => "zcertstore_new";

  --  Destroy a certificate store object in memory. Does not affect anything
  --  stored on disk.
   procedure zcertstore_destroy (self_p : System.Address)  -- /homes/taft/_distrib/include/zcertstore.h:40
   with Import => True, 
        Convention => C, 
        External_Name => "zcertstore_destroy";

  --  Look up certificate by public key, returns zcert_t object if found,
  --  else returns NULL. The public key is provided in Z85 text format.
   function zcertstore_lookup (self : access czmq_library_h.zcertstore_t; public_key : Interfaces.C.Strings.chars_ptr) return access czmq_library_h.zcert_t  -- /homes/taft/_distrib/include/zcertstore.h:45
   with Import => True, 
        Convention => C, 
        External_Name => "zcertstore_lookup";

  --  Insert certificate into certificate store in memory. Note that this
  --  does not save the certificate to disk. To do that, use zcert_save()
  --  directly on the certificate. Takes ownership of zcert_t object.
   procedure zcertstore_insert (self : access czmq_library_h.zcertstore_t; cert_p : System.Address)  -- /homes/taft/_distrib/include/zcertstore.h:51
   with Import => True, 
        Convention => C, 
        External_Name => "zcertstore_insert";

  --  Print list of certificates in store to logging facility
   procedure zcertstore_print (self : access czmq_library_h.zcertstore_t)  -- /homes/taft/_distrib/include/zcertstore.h:55
   with Import => True, 
        Convention => C, 
        External_Name => "zcertstore_print";

  --  Self test of this class
   procedure zcertstore_test (verbose : Extensions.bool)  -- /homes/taft/_distrib/include/zcertstore.h:59
   with Import => True, 
        Convention => C, 
        External_Name => "zcertstore_test";

  -- Loaders retrieve certificates from an arbitrary source.
  -- Destructor for loader state.
  --  *** Draft method, for development use, may change without warning ***
  --  Override the default disk loader with a custom loader fn.
  --  *** Draft method, for development use, may change without warning ***
  --  Empty certificate hashtable. This wrapper exists to be friendly to bindings,
  --  which don't usually have access to struct internals.
  --  *** Draft method, for development use, may change without warning ***
  --  Return a list of all the certificates in the store.
  --  The caller takes ownership of the zlistx_t object and is responsible
  --  for destroying it.  The caller does not take ownership of the zcert_t
  --  objects.
  --  Caller owns return value and must destroy it when done.
  --  *** Draft method, for development use, may change without warning ***
  --  Return the state stored in certstore
  --  @end
  --  Deprecated method aliases
end zcertstore_h;
