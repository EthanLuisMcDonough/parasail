pragma Ada_2012;
pragma Style_Checks (Off);
pragma Warnings ("U");

with Interfaces.C; use Interfaces.C;
limited with czmq_library_h;
with System;
with czmq_prelude_h;
with stddef_h;
with Interfaces.C.Strings;
with Interfaces.C.Extensions;

package zarmour_h is

   ZARMOUR_MODE_BASE64_STD : constant := 0;  --  /homes/taft/_distrib/include/zarmour.h:26
   ZARMOUR_MODE_BASE64_URL : constant := 1;  --  /homes/taft/_distrib/include/zarmour.h:27
   ZARMOUR_MODE_BASE32_STD : constant := 2;  --  /homes/taft/_distrib/include/zarmour.h:28
   ZARMOUR_MODE_BASE32_HEX : constant := 3;  --  /homes/taft/_distrib/include/zarmour.h:29
   ZARMOUR_MODE_BASE16 : constant := 4;  --  /homes/taft/_distrib/include/zarmour.h:30
   ZARMOUR_MODE_Z85 : constant := 5;  --  /homes/taft/_distrib/include/zarmour.h:31

  --  =========================================================================
  --    zarmour - armoured text encoding and decoding
  --    Copyright (c) the Contributors as noted in the AUTHORS file.
  --    This file is part of CZMQ, the high-level C binding for 0MQ:
  --    http://czmq.zeromq.org.
  --    This Source Code Form is subject to the terms of the Mozilla Public
  --    License, v. 2.0. If a copy of the MPL was not distributed with this
  --    file, You can obtain one at http://mozilla.org/MPL/2.0/.
  --    =========================================================================
  -- 

  --  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
  --  @warning Please edit the model at "api/zarmour.api" to make changes.
  --  @interface
  --  This is a stable class, and may not change except for emergencies. It
  --  is provided in stable builds.
  --  Create a new zarmour
   function zarmour_new return access czmq_library_h.zarmour_t  -- /homes/taft/_distrib/include/zarmour.h:35
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_new";

  --  Destroy the zarmour
   procedure zarmour_destroy (self_p : System.Address)  -- /homes/taft/_distrib/include/zarmour.h:39
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_destroy";

  --  Encode a stream of bytes into an armoured string. Returns the armoured
  --  string, or NULL if there was insufficient memory available to allocate
  --  a new string.
  --  Caller owns return value and must destroy it when done.
   function zarmour_encode
     (self : access czmq_library_h.zarmour_t;
      data : access czmq_prelude_h.byte;
      size : stddef_h.size_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/zarmour.h:46
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_encode";

  --  Decode an armoured string into a chunk. The decoded output is
  --  null-terminated, so it may be treated as a string, if that's what
  --  it was prior to encoding.
  --  Caller owns return value and must destroy it when done.
   function zarmour_decode (self : access czmq_library_h.zarmour_t; data : Interfaces.C.Strings.chars_ptr) return access czmq_library_h.zchunk_t  -- /homes/taft/_distrib/include/zarmour.h:53
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_decode";

  --  Get the mode property.
   function zarmour_mode (self : access czmq_library_h.zarmour_t) return int  -- /homes/taft/_distrib/include/zarmour.h:57
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_mode";

  --  Get printable string for mode.
   function zarmour_mode_str (self : access czmq_library_h.zarmour_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/zarmour.h:61
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_mode_str";

  --  Set the mode property.
   procedure zarmour_set_mode (self : access czmq_library_h.zarmour_t; mode : int)  -- /homes/taft/_distrib/include/zarmour.h:65
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_set_mode";

  --  Return true if padding is turned on.
   function zarmour_pad (self : access czmq_library_h.zarmour_t) return Extensions.bool  -- /homes/taft/_distrib/include/zarmour.h:69
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_pad";

  --  Turn padding on or off. Default is on.
   procedure zarmour_set_pad (self : access czmq_library_h.zarmour_t; pad : Extensions.bool)  -- /homes/taft/_distrib/include/zarmour.h:73
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_set_pad";

  --  Get the padding character.
   function zarmour_pad_char (self : access czmq_library_h.zarmour_t) return char  -- /homes/taft/_distrib/include/zarmour.h:77
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_pad_char";

  --  Set the padding character.
   procedure zarmour_set_pad_char (self : access czmq_library_h.zarmour_t; pad_char : char)  -- /homes/taft/_distrib/include/zarmour.h:81
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_set_pad_char";

  --  Return if splitting output into lines is turned on. Default is off.
   function zarmour_line_breaks (self : access czmq_library_h.zarmour_t) return Extensions.bool  -- /homes/taft/_distrib/include/zarmour.h:85
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_line_breaks";

  --  Turn splitting output into lines on or off.
   procedure zarmour_set_line_breaks (self : access czmq_library_h.zarmour_t; line_breaks : Extensions.bool)  -- /homes/taft/_distrib/include/zarmour.h:89
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_set_line_breaks";

  --  Get the line length used for splitting lines.
   function zarmour_line_length (self : access czmq_library_h.zarmour_t) return stddef_h.size_t  -- /homes/taft/_distrib/include/zarmour.h:93
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_line_length";

  --  Set the line length used for splitting lines.
   procedure zarmour_set_line_length (self : access czmq_library_h.zarmour_t; line_length : stddef_h.size_t)  -- /homes/taft/_distrib/include/zarmour.h:97
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_set_line_length";

  --  Print properties of object
   procedure zarmour_print (self : access czmq_library_h.zarmour_t)  -- /homes/taft/_distrib/include/zarmour.h:101
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_print";

  --  Self test of this class.
   procedure zarmour_test (verbose : Extensions.bool)  -- /homes/taft/_distrib/include/zarmour.h:105
   with Import => True, 
        Convention => C, 
        External_Name => "zarmour_test";

  --  @end
end zarmour_h;
