pragma Ada_2012;
pragma Style_Checks (Off);
pragma Warnings ("U");

with Interfaces.C; use Interfaces.C;
with Interfaces.C.Strings;
limited with czmq_library_h;
with System;
with Interfaces.C.Extensions;
limited with stdio_h;

package zconfig_h is

   --  arg-macro: procedure zconfig_dump (s)
   --    zconfig_print(s)
   --  arg-macro: procedure zconfig_resolve (s, p, d)
   --    zconfig_get((s),(p),(d))
  --  =========================================================================
  --    zconfig - work with config files written in rfc.zeromq.org/spec:4/ZPL.
  --    Copyright (c) the Contributors as noted in the AUTHORS file.
  --    This file is part of CZMQ, the high-level C binding for 0MQ:
  --    http://czmq.zeromq.org.
  --    This Source Code Form is subject to the terms of the Mozilla Public
  --    License, v. 2.0. If a copy of the MPL was not distributed with this
  --    file, You can obtain one at http://mozilla.org/MPL/2.0/.
  --    =========================================================================
  -- 

  --  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
  --  @warning Please edit the model at "api/zconfig.api" to make changes.
  --  @interface
  --  This is a stable class, and may not change except for emergencies. It
  --  is provided in stable builds.
  --  This class has draft methods, which may change over time. They are not
  --  in stable releases, by default. Use --enable-drafts to enable.
   --  skipped function type zconfig_fct

  --  Create new config item
   function zconfig_new (name : Interfaces.C.Strings.chars_ptr; parent : access czmq_library_h.zconfig_t) return access czmq_library_h.zconfig_t  -- /homes/taft/_distrib/include/zconfig.h:34
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_new";

  --  Load a config tree from a specified ZPL text file; returns a zconfig_t
  --  reference for the root, if the file exists and is readable. Returns NULL
  --  if the file does not exist.
   function zconfig_load (filename : Interfaces.C.Strings.chars_ptr) return access czmq_library_h.zconfig_t  -- /homes/taft/_distrib/include/zconfig.h:40
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_load";

  --  Equivalent to zconfig_load, taking a format string instead of a fixed
  --  filename.
   function zconfig_loadf (format : Interfaces.C.Strings.chars_ptr  -- , ...
      ) return access czmq_library_h.zconfig_t  -- /homes/taft/_distrib/include/zconfig.h:45
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_loadf";

  --  Destroy a config item and all its children
   procedure zconfig_destroy (self_p : System.Address)  -- /homes/taft/_distrib/include/zconfig.h:49
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_destroy";

  --  Return name of config item
   function zconfig_name (self : access czmq_library_h.zconfig_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/zconfig.h:53
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_name";

  --  Return value of config item
   function zconfig_value (self : access czmq_library_h.zconfig_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/zconfig.h:57
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_value";

  --  Insert or update configuration key with value
   procedure zconfig_put
     (self : access czmq_library_h.zconfig_t;
      path : Interfaces.C.Strings.chars_ptr;
      value : Interfaces.C.Strings.chars_ptr)  -- /homes/taft/_distrib/include/zconfig.h:61
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_put";

  --  Equivalent to zconfig_put, accepting a format specifier and variable
  --  argument list, instead of a single string value.
   procedure zconfig_putf
     (self : access czmq_library_h.zconfig_t;
      path : Interfaces.C.Strings.chars_ptr;
      format : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- /homes/taft/_distrib/include/zconfig.h:66
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_putf";

  --  Get value for config item into a string value; leading slash is optional
  --  and ignored.
   function zconfig_get
     (self : access czmq_library_h.zconfig_t;
      path : Interfaces.C.Strings.chars_ptr;
      default_value : Interfaces.C.Strings.chars_ptr) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/zconfig.h:71
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_get";

  --  Set config item name, name may be NULL
   procedure zconfig_set_name (self : access czmq_library_h.zconfig_t; name : Interfaces.C.Strings.chars_ptr)  -- /homes/taft/_distrib/include/zconfig.h:75
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_set_name";

  --  Set new value for config item. The new value may be a string, a printf
  --  format, or NULL. Note that if string may possibly contain '%', or if it
  --  comes from an insecure source, you must use '%s' as the format, followed
  --  by the string.
  --  Find our first child, if any
   function zconfig_child (self : access czmq_library_h.zconfig_t) return access czmq_library_h.zconfig_t  -- /homes/taft/_distrib/include/zconfig.h:86
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_child";

  --  Find our first sibling, if any
   function zconfig_next (self : access czmq_library_h.zconfig_t) return access czmq_library_h.zconfig_t  -- /homes/taft/_distrib/include/zconfig.h:90
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_next";

  --  Find a config item along a path; leading slash is optional and ignored.
   function zconfig_locate (self : access czmq_library_h.zconfig_t; path : Interfaces.C.Strings.chars_ptr) return access czmq_library_h.zconfig_t  -- /homes/taft/_distrib/include/zconfig.h:94
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_locate";

  --  Locate the last config item at a specified depth
   function zconfig_at_depth (self : access czmq_library_h.zconfig_t; level : int) return access czmq_library_h.zconfig_t  -- /homes/taft/_distrib/include/zconfig.h:98
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_at_depth";

  --  Execute a callback for each config item in the tree; returns zero if
  --  successful, else -1.
   function zconfig_execute
     (self : access czmq_library_h.zconfig_t;
      handler : access function
        (arg1 : access czmq_library_h.zconfig_t;
         arg2 : System.Address;
         arg3 : int) return int;
      arg : System.Address) return int  -- /homes/taft/_distrib/include/zconfig.h:103
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_execute";

  --  Add comment to config item before saving to disk. You can add as many
  --  comment lines as you like. If you use a null format, all comments are
  --  deleted.
   procedure zconfig_set_comment (self : access czmq_library_h.zconfig_t; format : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- /homes/taft/_distrib/include/zconfig.h:109
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_set_comment";

  --  Return comments of config item, as zlist.
   function zconfig_comments (self : access czmq_library_h.zconfig_t) return access czmq_library_h.zlist_t  -- /homes/taft/_distrib/include/zconfig.h:113
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_comments";

  --  Save a config tree to a specified ZPL text file, where a filename
  --  "-" means dump to standard output.
   function zconfig_save (self : access czmq_library_h.zconfig_t; filename : Interfaces.C.Strings.chars_ptr) return int  -- /homes/taft/_distrib/include/zconfig.h:118
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_save";

  --  Equivalent to zconfig_save, taking a format string instead of a fixed
  --  filename.
   function zconfig_savef (self : access czmq_library_h.zconfig_t; format : Interfaces.C.Strings.chars_ptr  -- , ...
      ) return int  -- /homes/taft/_distrib/include/zconfig.h:123
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_savef";

  --  Report filename used during zconfig_load, or NULL if none
   function zconfig_filename (self : access czmq_library_h.zconfig_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/zconfig.h:127
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_filename";

  --  Reload config tree from same file that it was previously loaded from.
  --  Returns 0 if OK, -1 if there was an error (and then does not change
  --  existing data).
   function zconfig_reload (self_p : System.Address) return int  -- /homes/taft/_distrib/include/zconfig.h:133
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_reload";

  --  Load a config tree from a memory chunk
   function zconfig_chunk_load (chunk : access czmq_library_h.zchunk_t) return access czmq_library_h.zconfig_t  -- /homes/taft/_distrib/include/zconfig.h:137
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_chunk_load";

  --  Save a config tree to a new memory chunk
   function zconfig_chunk_save (self : access czmq_library_h.zconfig_t) return access czmq_library_h.zchunk_t  -- /homes/taft/_distrib/include/zconfig.h:141
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_chunk_save";

  --  Load a config tree from a null-terminated string
  --  Caller owns return value and must destroy it when done.
   function zconfig_str_load (string : Interfaces.C.Strings.chars_ptr) return access czmq_library_h.zconfig_t  -- /homes/taft/_distrib/include/zconfig.h:146
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_str_load";

  --  Save a config tree to a new null terminated string
  --  Caller owns return value and must destroy it when done.
   function zconfig_str_save (self : access czmq_library_h.zconfig_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/zconfig.h:151
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_str_save";

  --  Return true if a configuration tree was loaded from a file and that
  --  file has changed in since the tree was loaded.
   function zconfig_has_changed (self : access czmq_library_h.zconfig_t) return Extensions.bool  -- /homes/taft/_distrib/include/zconfig.h:156
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_has_changed";

  --  Print the config file to open stream
   procedure zconfig_fprint (self : access czmq_library_h.zconfig_t; the_file : access stdio_h.FILE)  -- /homes/taft/_distrib/include/zconfig.h:160
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_fprint";

  --  Print properties of object
   procedure zconfig_print (self : access czmq_library_h.zconfig_t)  -- /homes/taft/_distrib/include/zconfig.h:164
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_print";

  --  Self test of this class
  --  *** Draft method, for development use, may change without warning ***
  --  Create copy of zconfig, caller MUST free the value
  --  Create copy of config, as new zconfig object. Returns a fresh zconfig_t
  --  object. If config is null, or memory was exhausted, returns null.
  --  Caller owns return value and must destroy it when done.
  --  *** Draft method, for development use, may change without warning ***
  --  Destroy subtree (all children)
  --  *** Draft method, for development use, may change without warning ***
  --  Destroy node and subtree (all children)
  --  @end
  --  Self test of this class
   procedure zconfig_test (verbose : Extensions.bool)  -- /homes/taft/_distrib/include/zconfig.h:194
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_test";

  --  Compiler hints
   procedure zconfig_set_value (self : access czmq_library_h.zconfig_t; format : Interfaces.C.Strings.chars_ptr  -- , ...
      )  -- /homes/taft/_distrib/include/zconfig.h:197
   with Import => True, 
        Convention => C, 
        External_Name => "zconfig_set_value";

  --  Deprecated method aliases
end zconfig_h;
