pragma Ada_2012;
pragma Style_Checks (Off);
pragma Warnings ("U");

with Interfaces.C; use Interfaces.C;
with Interfaces.C.Strings;
limited with czmq_library_h;
with System;
with Interfaces.C.Extensions;

package zdir_patch_h is

   --  unsupported macro: patch_create ZDIR_PATCH_CREATE
   --  unsupported macro: patch_delete ZDIR_PATCH_DELETE
   ZDIR_PATCH_CREATE : constant := 1;  --  /homes/taft/_distrib/include/zdir_patch.h:30
   ZDIR_PATCH_DELETE : constant := 2;  --  /homes/taft/_distrib/include/zdir_patch.h:31

  --  =========================================================================
  --    zdir_patch - work with directory patches
  --    Copyright (c) the Contributors as noted in the AUTHORS file.
  --    This file is part of CZMQ, the high-level C binding for 0MQ:
  --    http://czmq.zeromq.org.
  --    This Source Code Form is subject to the terms of the Mozilla Public
  --    License, v. 2.0. If a copy of the MPL was not distributed with this
  --    file, You can obtain one at http://mozilla.org/MPL/2.0/.
  --    =========================================================================
  -- 

  -- un-namespaced enumeration values
  --  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
  --  @warning Please edit the model at "api/zdir_patch.api" to make changes.
  --  @interface
  --  This is a stable class, and may not change except for emergencies. It
  --  is provided in stable builds.
  --  Create new patch
   function zdir_patch_new
     (path : Interfaces.C.Strings.chars_ptr;
      file : access czmq_library_h.zfile_t;
      op : int;
      alias : Interfaces.C.Strings.chars_ptr) return access czmq_library_h.zdir_patch_t  -- /homes/taft/_distrib/include/zdir_patch.h:35
   with Import => True, 
        Convention => C, 
        External_Name => "zdir_patch_new";

  --  Destroy a patch
   procedure zdir_patch_destroy (self_p : System.Address)  -- /homes/taft/_distrib/include/zdir_patch.h:39
   with Import => True, 
        Convention => C, 
        External_Name => "zdir_patch_destroy";

  --  Create copy of a patch. If the patch is null, or memory was exhausted,
  --  returns null.
  --  Caller owns return value and must destroy it when done.
   function zdir_patch_dup (self : access czmq_library_h.zdir_patch_t) return access czmq_library_h.zdir_patch_t  -- /homes/taft/_distrib/include/zdir_patch.h:45
   with Import => True, 
        Convention => C, 
        External_Name => "zdir_patch_dup";

  --  Return patch file directory path
   function zdir_patch_path (self : access czmq_library_h.zdir_patch_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/zdir_patch.h:49
   with Import => True, 
        Convention => C, 
        External_Name => "zdir_patch_path";

  --  Return patch file item
   function zdir_patch_file (self : access czmq_library_h.zdir_patch_t) return access czmq_library_h.zfile_t  -- /homes/taft/_distrib/include/zdir_patch.h:53
   with Import => True, 
        Convention => C, 
        External_Name => "zdir_patch_file";

  --  Return operation
   function zdir_patch_op (self : access czmq_library_h.zdir_patch_t) return int  -- /homes/taft/_distrib/include/zdir_patch.h:57
   with Import => True, 
        Convention => C, 
        External_Name => "zdir_patch_op";

  --  Return patch virtual file path
   function zdir_patch_vpath (self : access czmq_library_h.zdir_patch_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/zdir_patch.h:61
   with Import => True, 
        Convention => C, 
        External_Name => "zdir_patch_vpath";

  --  Calculate hash digest for file (create only)
   procedure zdir_patch_digest_set (self : access czmq_library_h.zdir_patch_t)  -- /homes/taft/_distrib/include/zdir_patch.h:65
   with Import => True, 
        Convention => C, 
        External_Name => "zdir_patch_digest_set";

  --  Return hash digest for patch file
   function zdir_patch_digest (self : access czmq_library_h.zdir_patch_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/zdir_patch.h:69
   with Import => True, 
        Convention => C, 
        External_Name => "zdir_patch_digest";

  --  Self test of this class.
   procedure zdir_patch_test (verbose : Extensions.bool)  -- /homes/taft/_distrib/include/zdir_patch.h:73
   with Import => True, 
        Convention => C, 
        External_Name => "zdir_patch_test";

  --  @end
end zdir_patch_h;
