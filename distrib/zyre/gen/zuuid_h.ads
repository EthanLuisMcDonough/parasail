pragma Ada_2012;
pragma Style_Checks (Off);
pragma Warnings ("U");

with Interfaces.C; use Interfaces.C;
limited with czmq_library_h;
with czmq_prelude_h;
with System;
with Interfaces.C.Strings;
with stddef_h;
with Interfaces.C.Extensions;

package zuuid_h is

   ZUUID_LEN : constant := 16;  --  /homes/taft/_distrib/include/zuuid.h:17
   --  unsupported macro: ZUUID_STR_LEN (ZUUID_LEN * 2)

  --  =========================================================================
  --    zuuid - UUID support class
  --    Copyright (c) the Contributors as noted in the AUTHORS file.
  --    This file is part of CZMQ, the high-level C binding for 0MQ:
  --    http://czmq.zeromq.org.
  --    This Source Code Form is subject to the terms of the Mozilla Public
  --    License, v. 2.0. If a copy of the MPL was not distributed with this
  --    file, You can obtain one at http://mozilla.org/MPL/2.0/.
  --    =========================================================================
  -- 

  --  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
  --  @warning Please edit the model at "api/zuuid.api" to make changes.
  --  @interface
  --  This is a stable class, and may not change except for emergencies. It
  --  is provided in stable builds.
  --  Create a new UUID object.
   function zuuid_new return access czmq_library_h.zuuid_t  -- /homes/taft/_distrib/include/zuuid.h:31
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_new";

  --  Create UUID object from supplied ZUUID_LEN-octet value.
   function zuuid_new_from (source : access czmq_prelude_h.byte) return access czmq_library_h.zuuid_t  -- /homes/taft/_distrib/include/zuuid.h:35
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_new_from";

  --  Destroy a specified UUID object.
   procedure zuuid_destroy (self_p : System.Address)  -- /homes/taft/_distrib/include/zuuid.h:39
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_destroy";

  --  Set UUID to new supplied ZUUID_LEN-octet value.
   procedure zuuid_set (self : access czmq_library_h.zuuid_t; source : access czmq_prelude_h.byte)  -- /homes/taft/_distrib/include/zuuid.h:43
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_set";

  --  Set UUID to new supplied string value skipping '-' and '{' '}'
  --  optional delimiters. Return 0 if OK, else returns -1.
   function zuuid_set_str (self : access czmq_library_h.zuuid_t; source : Interfaces.C.Strings.chars_ptr) return int  -- /homes/taft/_distrib/include/zuuid.h:48
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_set_str";

  --  Return UUID binary data.
   function zuuid_data (self : access czmq_library_h.zuuid_t) return access czmq_prelude_h.byte  -- /homes/taft/_distrib/include/zuuid.h:52
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_data";

  --  Return UUID binary size
   function zuuid_size (self : access czmq_library_h.zuuid_t) return stddef_h.size_t  -- /homes/taft/_distrib/include/zuuid.h:56
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_size";

  --  Returns UUID as string
   function zuuid_str (self : access czmq_library_h.zuuid_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/zuuid.h:60
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_str";

  --  Return UUID in the canonical string format: 8-4-4-4-12, in lower
  --  case. Caller does not modify or free returned value. See
  --  http://en.wikipedia.org/wiki/Universally_unique_identifier
   function zuuid_str_canonical (self : access czmq_library_h.zuuid_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/zuuid.h:66
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_str_canonical";

  --  Store UUID blob in target array
   procedure zuuid_export (self : access czmq_library_h.zuuid_t; target : access czmq_prelude_h.byte)  -- /homes/taft/_distrib/include/zuuid.h:70
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_export";

  --  Check if UUID is same as supplied value
   function zuuid_eq (self : access czmq_library_h.zuuid_t; compare : access czmq_prelude_h.byte) return Extensions.bool  -- /homes/taft/_distrib/include/zuuid.h:74
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_eq";

  --  Check if UUID is different from supplied value
   function zuuid_neq (self : access czmq_library_h.zuuid_t; compare : access czmq_prelude_h.byte) return Extensions.bool  -- /homes/taft/_distrib/include/zuuid.h:78
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_neq";

  --  Make copy of UUID object; if uuid is null, or memory was exhausted,
  --  returns null.
   function zuuid_dup (self : access czmq_library_h.zuuid_t) return access czmq_library_h.zuuid_t  -- /homes/taft/_distrib/include/zuuid.h:83
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_dup";

  --  Self test of this class.
   procedure zuuid_test (verbose : Extensions.bool)  -- /homes/taft/_distrib/include/zuuid.h:87
   with Import => True, 
        Convention => C, 
        External_Name => "zuuid_test";

  --  @end
end zuuid_h;
