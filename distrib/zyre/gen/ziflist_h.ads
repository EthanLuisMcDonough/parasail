pragma Ada_2012;
pragma Style_Checks (Off);
pragma Warnings ("U");

with Interfaces.C; use Interfaces.C;
limited with czmq_library_h;
with System;
with stddef_h;
with Interfaces.C.Strings;
with Interfaces.C.Extensions;

package ziflist_h is

  --  =========================================================================
  --    ziflist - List of network interfaces available on system
  --    Copyright (c) the Contributors as noted in the AUTHORS file.
  --    This file is part of CZMQ, the high-level C binding for 0MQ:
  --    http://czmq.zeromq.org.
  --    This Source Code Form is subject to the terms of the Mozilla Public
  --    License, v. 2.0. If a copy of the MPL was not distributed with this
  --    file, You can obtain one at http://mozilla.org/MPL/2.0/.
  --    =========================================================================
  -- 

  --  @warning THE FOLLOWING @INTERFACE BLOCK IS AUTO-GENERATED BY ZPROJECT
  --  @warning Please edit the model at "api/ziflist.api" to make changes.
  --  @interface
  --  This is a stable class, and may not change except for emergencies. It
  --  is provided in stable builds.
  --  This class has draft methods, which may change over time. They are not
  --  in stable releases, by default. Use --enable-drafts to enable.
  --  Get a list of network interfaces currently defined on the system
   function ziflist_new return access czmq_library_h.ziflist_t  -- /homes/taft/_distrib/include/ziflist.h:30
   with Import => True, 
        Convention => C, 
        External_Name => "ziflist_new";

  --  Destroy a ziflist instance
   procedure ziflist_destroy (self_p : System.Address)  -- /homes/taft/_distrib/include/ziflist.h:34
   with Import => True, 
        Convention => C, 
        External_Name => "ziflist_destroy";

  --  Reload network interfaces from system
   procedure ziflist_reload (self : access czmq_library_h.ziflist_t)  -- /homes/taft/_distrib/include/ziflist.h:38
   with Import => True, 
        Convention => C, 
        External_Name => "ziflist_reload";

  --  Return the number of network interfaces on system
   function ziflist_size (self : access czmq_library_h.ziflist_t) return stddef_h.size_t  -- /homes/taft/_distrib/include/ziflist.h:42
   with Import => True, 
        Convention => C, 
        External_Name => "ziflist_size";

  --  Get first network interface, return NULL if there are none
   function ziflist_first (self : access czmq_library_h.ziflist_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/ziflist.h:46
   with Import => True, 
        Convention => C, 
        External_Name => "ziflist_first";

  --  Get next network interface, return NULL if we hit the last one
   function ziflist_next (self : access czmq_library_h.ziflist_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/ziflist.h:50
   with Import => True, 
        Convention => C, 
        External_Name => "ziflist_next";

  --  Return the current interface IP address as a printable string
   function ziflist_address (self : access czmq_library_h.ziflist_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/ziflist.h:54
   with Import => True, 
        Convention => C, 
        External_Name => "ziflist_address";

  --  Return the current interface broadcast address as a printable string
   function ziflist_broadcast (self : access czmq_library_h.ziflist_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/ziflist.h:58
   with Import => True, 
        Convention => C, 
        External_Name => "ziflist_broadcast";

  --  Return the current interface network mask as a printable string
   function ziflist_netmask (self : access czmq_library_h.ziflist_t) return Interfaces.C.Strings.chars_ptr  -- /homes/taft/_distrib/include/ziflist.h:62
   with Import => True, 
        Convention => C, 
        External_Name => "ziflist_netmask";

  --  Return the list of interfaces.
   procedure ziflist_print (self : access czmq_library_h.ziflist_t)  -- /homes/taft/_distrib/include/ziflist.h:66
   with Import => True, 
        Convention => C, 
        External_Name => "ziflist_print";

  --  Self test of this class.
   procedure ziflist_test (verbose : Extensions.bool)  -- /homes/taft/_distrib/include/ziflist.h:70
   with Import => True, 
        Convention => C, 
        External_Name => "ziflist_test";

  --  *** Draft method, for development use, may change without warning ***
  --  Get a list of network interfaces currently defined on the system
  --  Includes IPv6 interfaces
  --  Caller owns return value and must destroy it when done.
  --  *** Draft method, for development use, may change without warning ***
  --  Reload network interfaces from system, including IPv6
  --  *** Draft method, for development use, may change without warning ***
  --  Return true if the current interface uses IPv6
  --  @end
end ziflist_h;
