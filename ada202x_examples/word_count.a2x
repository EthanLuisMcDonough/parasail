function Word_Count
  (S : Univ_String;
   Separators : Univ_String := " ";
   Debug : Boolean := False)
  return Univ_Integer is
  -- Return count of words separated by given set of separators
begin
   case S'Length is
     when 0 => return 0; -- Empty string

     when 1 =>
      if (for some C of Separators => C = S[1]) then
          return 0;  -- A single separator
      else
          return 1;  -- A single non-separator
      end if;

     when others =>   -- Multi-character string; divide and conquer
      Half_Len : constant := S'Length/2;

      if Debug then
         Put_Line ("Divide and conquer: Count(" & S[1 .. Half_Len] &
            ") + Count(" & S[Half_Len + 1 .. S'Length] & ")");
      end if;

      Sum1, Sum2 : Univ_Integer;

      parallel do
         Sum1 := Word_Count(S[1 .. Half_Len], Separators, Debug);
      and
         Sum2 := Word_Count(S[Half_Len + 1 .. S'Length], Separators, Debug);
      end do

      Sum : constant := Sum1 + Sum2;

      if (for some C of Separators =>
        C = S[Half_Len] or else C = S[Half_Len+1])
      then
          return Sum;    -- At least one separator at border
      else
          return Sum-1;  -- Combine words at border
      end if;
   end case;
end Word_Count;

procedure Test_Word_Count (Input : Univ_String) is
   Debug : constant Boolean := Input /= "" and then Input[Input'Length] = '!';

   Str : constant Univ_String :=
     (if Input /= "" and then Input /= "!" then Input
      else "This is a test of the amazing word counter")
begin

   Put_Line ("The string """ & Str & """ has " &
     Word_Count (Str, Debug => Debug)'Image & " words.");
end Test_Word_Count;

procedure main (Args : Basic_Array<Univ_String>) is
begin
   if Args'Length = 0 then
      Test_Word_Count ("This is a test of the amazing compiled word counter");
   else
      Concat : Univ_String := Args (1);
      for I in 2 .. Args'Length loop
         Concat := Concat & ' ' & Args (I);
      end loop
      Test_Word_Count (Concat);
   end if;
end main;
